{"version":3,"sources":["Odds.js","Scores.js","Fantasy.js","HomeTicker.js","Notfound.js","Ticker.js","Selector.js","Clock.js","TickerContainer.js","App.js","serviceWorker.js","index.js"],"names":["Odds","props","games","height","hspace","className","map","game","AwayTeamName","HomeTeamName","AlternateMarketPregameOdds","OverUnder","HomePointSpread","AwayMoneyLine","HomeMoneyLine","Scores","renderScores","scores","score","AwayTeam","AwayTeamScore","HomeTeam","HomeTeamScore","Quarter","Status","TimeRemainingMinutes","TimeRemainingSeconds","this","React","Component","Fantasy","fantasyStats","stat","Position","Team","Name","FantasyPointsYahoo","HomeTicker","Notfound","Ticker","renderOdds","key","ID","GameKey","renderFantasy","PlayerID","path","render","exact","component","Selector","onClick","e","handleClick","value","Clock","state","time","Date","toLocaleString","hour","minute","second","tick","setState","intervalID","setInterval","clearInterval","TickerContainer","sportSelector","sportDisplay","filteredSportID","date","target","text","fetchScores","fetchOdds","fetchFantasyStats","fetch","then","resp","json","Fragment","feedChoice","App","withRouter","Boolean","window","location","hostname","match","routing","activeClassName","to","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2010a9ec.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Odds (props) {\n    const { games } = props\n    \n    const renderGames = () => {\n        return games.map(game => {\n            return (\n                <div className=\"marquee\">\n                    <div className=\"teams\" >\n                        <h1>{game.AwayTeamName}</h1>\n                        <h1>{game.HomeTeamName}</h1>\n                    </div>\n                    <div className=\"current-odds\">\n                        <h1>{game.AlternateMarketPregameOdds[0].OverUnder}</h1>\n                        <h1>{game.AlternateMarketPregameOdds[0].HomePointSpread}</h1>\n                    </div>\n                    <div className=\"moneylines\">\n                        <h1>{game.AlternateMarketPregameOdds[0].AwayMoneyLine}</h1>\n                        <h1>{game.AlternateMarketPregameOdds[0].HomeMoneyLine}</h1>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return(\n        <marquee height=\"225px\" hspace=\"0px\" className=\"marquee-container\" >\n            {renderGames()}\n        </marquee>\n    )\n\n}\nexport default Odds\n  ","import React from 'react'\n\nclass Scores extends React.Component {\n    \n    \n    renderScores = () => {\n        return this.props.scores.map(score => {\n\n            return (\n                <div className=\"marquee\">\n                    <div className=\"team-scores\" >\n                        <h1>{score.AwayTeam}</h1>\n                        {score.AwayTeamScore === null ?\n                        <h1>0</h1> :\n                        <h1>{score.AwayTeamScore}</h1>}\n                    </div>\n                    <div className=\"team-scores\">\n                        <h1>{score.HomeTeam}</h1>\n                        {score.HomeTeamScore === null ?\n                        <h1>0</h1> :\n                        <h1>{score.HomeTeamScore}</h1>}\n                    </div>\n                    <div className=\"time-left\">\n                        {score.Quarter === null ?\n                        <h1>{score.Status}</h1> :\n                        <h1>Qtr:{score.Quarter}</h1>}\n                        {score.TimeRemainingMinutes === null && score.TimeRemainingSeconds === null ?\n                        // <h1>{score.DateTime}</h1>\n                        <h1>0:00</h1>: \n                        <h1>{score.TimeRemainingMinutes}:{score.TimeRemainingSeconds}</h1>}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n   \n    render() {\n        return(\n            <marquee height=\"225px\" hspace=\"0px\" className=\"marquee-container\" >\n                {this.renderScores()}\n            </marquee>\n        )\n    }\n}\nexport default Scores","import React from 'react'\n\nfunction Fantasy (props) {\n    const { fantasyStats } = props\n    \n    const renderStats = () => {\n        return fantasyStats.map(stat => {\n    \n        return (\n            <div className=\"marquee\">\n                <div className=\"fantasy-player\" >\n                    <h1>{stat.Position}</h1>\n                    <h1>{stat.Team}</h1>\n                </div>\n                <div className=\"fantasy-points\">\n                    <h1>{stat.Name}</h1>\n                    <h1>Points: {stat.FantasyPointsYahoo}</h1>\n                </div>\n            </div>\n            )\n        })\n    }\n\n    return(\n        <marquee height=\"225px\" hspace=\"0px\" className=\"marquee-container\" >\n            {renderStats()}\n        </marquee>\n    )\n}\nexport default Fantasy","import React from \"react\";\n\nfunction HomeTicker () {\n    return (\n        <marquee height=\"225px\" hspace=\"0px\" className=\"marquee-container\" >\n            <div className=\"marquee\">\n                <h1>\n                    Welcome to The Sports Marquee.\n                    Select a Feed in the Navigation bar above \n                </h1>\n            </div>\n        </marquee>\n    )\n}\nexport default HomeTicker;","import React from 'react'\n\nconst Notfound = () => {\n    return(\n        <marquee height=\"225px\" hspace=\"0px\" className=\"marquee-container\" >\n            <div className=\"marquee\">\n                <div className=\"teams\">\n                    <h1 >404 - Page Not Found</h1>\n                    <h1> Select an option in the menu above</h1>\n                </div>\n            </div>\n        </marquee>\n    )\n}\nexport default Notfound","import React from 'react'\nimport Odds from './Odds'\nimport Scores from './Scores'\nimport Fantasy from './Fantasy'\nimport HomeTicker from './HomeTicker'\nimport Notfound from './Notfound'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\n\n\n\nclass Ticker extends React.Component {\n\n    renderOdds = () => {\n        return <Odds key={this.props.games.ID} games={this.props.games} /> \n    }\n    \n    renderScores = () => {\n        return <Scores key={this.props.scores.GameKey} scores={this.props.scores}/>\n    }\n\n    renderFantasy = () => {\n        return <Fantasy key={this.props.fantasyStats.PlayerID} fantasyStats={this.props.fantasyStats}/>\n    }    \n    \n    render () {\n        return (\n            <div>\n                <Switch>\n                    <Route path=\"/odds\" render={this.renderOdds} />\n                    <Route path=\"/live-scores\" render={this.renderScores}/>\n                    <Route path=\"/fantasy\" render={this.renderFantasy} />\n                    <Route exact path=\"/\" component={HomeTicker} />\n                    <Route component={Notfound} />\n                </Switch>\n            </div>\n            )\n        }\n    }\n        \nexport default Ticker;","import React from 'react'\n\nfunction Selector (props){\n\n        return(\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\" >Change Sport</button>\n                    <div className=\"dropdown-content\" onClick={(e) => {props.handleClick(e)}}>\n                        <a value=\"ALL\" >ALL</a>\n                        <a value=\"NFL\">NFL</a>\n                        <a value=\"NCAAF\">NCAAF</a>\n                        <a value=\"NCAAB\">NCAAB</a>\n                        <a value=\"NHL\">NHL</a>\n                        <a value=\"NBA\">NBA</a>\n                    </div>\n            </div>\n    )\n}\nexport default Selector;","import React from \"react\"\n\nclass Clock extends React.Component {\n\n    state = {\n        time: new Date().toLocaleString('en-US', {hour: '2-digit', minute: '2-digit', second: '2-digit'})\n        }\n    \n    componentDidMount() {\n      this.intervalID = setInterval(\n        () => this.tick(),\n        1000\n      );\n    }\n    componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n\n    tick = () => {\n      this.setState({\n        time: new Date().toLocaleString('en-US', {hour: '2-digit', minute: '2-digit', second: '2-digit'})\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"clock\">\n          <h2>{this.state.time}</h2>\n        </div>\n    )}\n}\n\nexport default Clock;","import React from 'react'\nimport Ticker from './Ticker'\nimport Selector from './Selector'\nimport Clock from './Clock'\nimport ReactCountdownClock from 'react-countdown-clock'\n\n\nclass TickerContainer extends React.Component {\n    \n\n    state = {\n        sportSelector: 'nfl',\n        sportDisplay: 'NFL',\n        filteredSportID: 0,\n        games: [],\n        scores: [],\n        fantasyStats: [],\n        date: new Date\n    }\n    // setDate = () => {\n    //     let tempDate = new Date()\n    //     let date = tempDate.getFullYear() + '/' + (tempDate.getMonth()+1) + '/' + tempDate.getDate();\n    //     this.setState({\n    //         date: date\n    //     })\n    // }\n\n    handleClick = (e) => {\n        let selectedSport = e.target.text;\n        switch (selectedSport) {\n            case 'NCAAB':\n                this.setState({\n                    sportSelector: 'cbb',\n                    sportDisplay: 'NCAAB',\n                    filteredSportID: 3\n                })\n                break;\n            case 'NFL':\n                this.setState({\n                    sportSelector: 'nfl',\n                    sportDisplay: 'NFL',\n                    filteredSportID: 2\n                })\n                break;\n            case 'NBA':\n                this.setState({\n                    sportSelector: 'nba',\n                    sportDisplay: 'NBA',\n                    filteredSportID: 1\n                })\n                break;\n            case 'NHL':\n                this.setState({\n                    sportSelector: 'nhl',\n                    sportDisplay: 'NHL',\n                    filteredSportID: 4\n                })\n                break;\n            case 'NCAAF':\n                this.setState({\n                    sportSelector: 'cfb',\n                    sportDisplay: 'NCAAF',\n                    filteredSportID: 5\n                })\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n\n\n    componentDidMount() {\n        this.fetchScores()\n        this.fetchOdds()\n        this.fetchFantasyStats()\n    }\n\n    fetchOdds() {\n        const nflKey = '03acceecb3524161ac420bb653e6803c'\n        const nbaKey = '9b9d34020bc54c4db706f76c9cba3a6f'\n        // fetch('http://localhost:3000/matches')\n        fetch(`https://api.sportsdata.io/v3/nfl/odds/json/AlternateMarketGameOddsByWeek/2019REG/14?key=03acceecb3524161ac420bb653e6803c`)\n        .then(resp => resp.json())\n        .then(games => {\n            this.setState({\n                games: games\n            })\n        })\n    }\n    \n    fetchScores() {\n        const nflKey = '03acceecb3524161ac420bb653e6803c'\n        const nbaKey = '9b9d34020bc54c4db706f76c9cba3a6f'\n        // let tempDate = new Date()\n        // let date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate();\n        // fetch(\"https://api.sportsdata.io/v3/nfl/scores/json/ScoresByWeek/2019/13?key=03acceecb3524161ac420bb653e6803c\")\n        fetch(`https://api.sportsdata.io/v3/nba/scores/json/GamesByDate/2019-12-4?key=9b9d34020bc54c4db706f76c9cba3a6f`)\n        .then(resp => resp.json())\n        .then(scores => {\n            this.setState({\n                scores: scores\n            })\n        })\n    }\n\n    fetchFantasyStats() {\n        const nflKey = '03acceecb3524161ac420bb653e6803c'\n        fetch(`https://api.sportsdata.io/v3/nfl/stats/json/DailyFantasyPoints/2019-DEC-3?key=03acceecb3524161ac420bb653e6803c`)\n        .then(resp => resp.json())\n        .then(fantasyStats => {\n            this.setState({\n                fantasyStats: fantasyStats\n            })\n        })\n    }\n    \n\n    \n \n    render(){ \n        \n        // let filteredScores;\n        // if (this.state.sportSelector !== 0 )\n        //     filteredScores = this.state.scores.filter(g =>\n        //     g.Sport === this.state.sportSelector)\n        // else (filteredScores = this.state.scores) \n        return (\n            <React.Fragment>\n                <div className=\"ticker-container\">\n                    \n                    <Selector className=\"selector\" handleClick={this.handleClick} />\n                    \n                    <h2 className=\"current-sport\"> \n                        <div className=\"current-sport-text\">\n                            Sport: \n                        </div>\n                            {this.state.sportDisplay}\n                    </h2>\n                </div>\n                \n                <div className=\"countdown\">\n                    <Clock className=\"clock\" />\n                    {/* <h2 className=\"refresh\"> Auto-Refresh In:</h2> */}\n                    {/* <ReactCountdownClock seconds={720} color=\"#531092\" alpha={0.9} size={75} onComplete={this.fetchOdds} /> */}\n                </div>\n                    <Ticker className=\"ticker\" \n                        filteredSportID={this.state.filteredSportID} \n                        games={this.state.games} \n                        scores={this.state.scores} \n                        fantasyStats={this.state.fantasyStats} \n                        key={this.state.games.ID} \n                        feedChoice={this.props.feedChoice} \n                        />\n            </React.Fragment>\n        )}\n        \n}\n\n\n\nexport default TickerContainer","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport './App.css';\nimport TickerContainer from \"./TickerContainer\"\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">  \n        <header>\n          <h1 className=\"title\">The Sports Marquee</h1>\n        </header>\n        <TickerContainer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, NavLink, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport Odds from './Odds'\nimport Scores from './Scores'\nimport Fantasy from './Fantasy'\nimport Notfound from './Notfound'\nimport * as serviceWorker from './serviceWorker';\n\n\n   \nconst routing = (\n    <Router>\n        <ul className=\"nav-links\">\n          <li className=\"links\">\n            <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n          </li>\n          <li className=\"links\">\n            <NavLink activeClassName=\"active\" to=\"/odds\">Game Odds</NavLink>\n          </li>\n          <li className=\"links\">\n            <NavLink activeClassName=\"active\" to=\"/live-scores\">Live Scores</NavLink>\n          </li>\n          <li className=\"links\">\n            <NavLink activeClassName=\"active\" to=\"/fantasy\">Fantasy Stats</NavLink>\n          </li>\n        </ul>\n        <App />\n    </Router>\n  )\n  ReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n        // <ul className=\"nav-links\">\n        //   <li className=\"links\">\n        //     <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n        //   </li>\n        //   <li className=\"links\">\n        //     <NavLink activeClassName=\"active\" to=\"/odds\">Odds</NavLink>\n        //   </li>\n        //   <li className=\"links\">\n        //     <NavLink activeClassName=\"active\" to=\"/live-scores\">Live Scores</NavLink>\n        //   </li>\n        //   <li className=\"links\">\n        //     <NavLink activeClassName=\"active\" to=\"/fantasy\">Fantasy</NavLink>\n        //   </li>\n        // </ul>"],"sourceRoot":""}